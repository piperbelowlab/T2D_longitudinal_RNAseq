gsg=goodSamplesGenes(ourExpr1, verbose=3)
gsg$allOK

sampleTree=hclust(dist(ourExpr1),method="average")
sizeGrWindow(12,9)
par(cex=0.6)
par(mar=c(0,4,2,0))
plot(sampleTree, main="Sample clustering to detect outliers", sub="", xlab="", cex.lab=1.5, cex.axis=1.5, cex.main=2)

plotDendroAndColors(sampleTree2, traitColors, groupLabels=names(ourdatTraits), main="Sample dendrogram and trait heatmap")

save(ourExpr1, ourdatTraits, file ="meta_manic_batch.RData")

powers=c(c(1:10),seq(from=12, to=20, by=2))
sft=pickSoftThreshold(ourExpr1,corFnc="bicor", networkType="signed hybrid",powerVector=powers, verbose=5)

sizeGrWindow(9,5)
par(mfrow=c(1,2))
cex1=0.9
plot(sft$fitIndices[,1], -sign(sft$fitIndices[,3])*sft$fitIndices[,2], xlab="Soft Threshold (power)", ylab="Scale Free Topology Model Fit, signed R^2", type="n", main=paste("Scale independence"))
text(sft$fitIndices[,1], -sign(sft$fitIndices[,3])*sft$fitIndices[,2], labels=powers,cex=cex1, col="red")

# this line corresponds to using an R^2 cut-off of h
abline(h=0.80, col="red")
#Mean Connectivity as a function of the soft-thresholding power#
plot(sft$fitIndices[,1], sft$fitIndices[,5], xlab="Soft Threshold (power)", ylab="Mean Connectivity", type="n", main=paste("Mean connectivity"))
text(sft$fitIndices[,1], sft$fitIndices[,5],  labels=powers,cex=cex1, col="red")

softPower = 6;
adjacency = adjacency(ourExpr1, type="signed hybrid", power = softPower, corFnc="bicor");

bwnet=blockwiseModules(ourExpr1, maxBlockSize=10000, power=6, TOMType="signed", deepSplit=2, minModuleSize=50, reassignThreshold=0, mergeCutHeight=0.25, numericLabels= TRUE, pamRespectsDendro= FALSE, saveTOMs= FALSE, networkType= "signed hybrid", verbose=5, corType="bicor", maxPOutliers=0.1, pearsonFallback="individual")

modulePreservation(multiData = ourExpr1, multiColor = bwnet$colors, networkType = "signed hybrid", corFnc = "bicor", verbose = 3,nPermutations = 100, corOptions = "use = 'p'")

dynamicColors=labels2colors(bwnet$colors)
table(dynamicColors)

#Draw by blocks#
sizeGrWindow(8,6)
plotDendroAndColors(bwnet$dendrograms[[4]], dynamicColors[bwnet$blockGenes[[4]]], "Dynamic Tree Cut",
                    dendroLabels = FALSE, hang = 0.03,
                    addGuide = TRUE, guideHang = 0.05,
                    main = "Gene dendrogram and module colors")

blockwiseMEs=moduleEigengenes(ourExpr1, dynamicColors)$eigengenes

MEDiss = 1-cor(blockwiseMEs);
# Cluster module eigengenes
METree = hclust(as.dist(MEDiss), method = "average");
# Plot the result
sizeGrWindow(7, 6)
plot(METree, main = "Clustering of module eigengenes",
     xlab = "", sub = "")

#Start to merge#
#Choose a cut of 0.25, corresponding to correlation of 0.75#
MEDissThres = 0.25
# Plot the cut line into the dendrogram
abline(h=MEDissThres, col = "red")
# Call an automatic merging function
merge = mergeCloseModules(ourExpr1, dynamicColors, cutHeight = MEDissThres, verbose = 3)     
mergedColors = merge$colors;
# Eigengenes of the new merged modules:
mergedMEs = merge$newMEs;
